name: check and publish

env:
  POETRY_VERSION: "1.6.1"
  PYTHON_VERSION: "3.11"

on: push

permissions:
  contents: "write"
  packages: "write"
  pull-requests: "read"

jobs:
  static-checks-and-transpile:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}
      - name: Run image
        uses: abatilo/actions-poetry@v2.1.4
        with:
          poetry-version: ${{ env.POETRY_VERSION }}
      - run: poetry lock --check
      - run: poetry install
      - run: poetry run mypy -p python_transpiler
      - run: poetry run mypy tests
      - run: poetry run black --check --diff .
      - run: poetry run ruff .
      - run: poetry run pylint python_transpiler tests
      - run: poetry run transpile transpiled --target=3.8
      - name: upload transpiled code
        uses: actions/upload-artifact@v3
        with:
          name: transpiled
          path: transpiled
  test:
    needs: static-checks-and-transpile
    strategy:
        fail-fast: false
        matrix:
          python_version: ["3.8", "3.9", "3.10", "3.11"]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python_version }}
      - name: Run image
        uses: abatilo/actions-poetry@v2.1.4
        with:
          poetry-version: ${{ env.POETRY_VERSION }}
      - run: poetry install
      - name: Download transpiled code
        uses: actions/download-artifact@v3
        with:
          name: transpiled
          path: transpiled
      - name: setup transpiled project
        # we did poetry install already, but now we need to replace the root package with the transpiled version
        run: |
          cd transpiled
          poetry install --only-root
          cd ..
      - run: poetry run pytest
  publish:
    runs-on: "ubuntu-latest"
    if: github.ref == 'refs/heads/master'
    needs:
      - test
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v4
        with:
          python-version: "3.11"
      - name: Run image
        uses: abatilo/actions-poetry@v2.1.4
        with:
          poetry-version: ${{ env.POETRY_VERSION }}
      - name: set token
        run: poetry config pypi-token.pypi ${{ secrets.PYPI_TOKEN }}
      # TODO: save installed deps from previous stage
      - name: Download transpiled code
        uses: actions/download-artifact@v3
        with:
          name: transpiled
          path: transpiled
      - name: setup transpiled project
        run: cd transpiled
      - run: poetry build
      - run: poetry publish
      - name: get version number
        id: current-version
        run: echo ::set-output name=CURRENT_VERSION::$(poetry version -s)
      - uses: marvinpinto/action-automatic-releases@v1.2.1
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          prerelease: false
          files: dist/*
          automatic_release_tag: ${{ steps.current-version.outputs.CURRENT_VERSION }}
